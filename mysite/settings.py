"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import pwd
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

STATICFILES_DIRS = (
    ("mysite", os.path.join(BASE_DIR, 'mysite/static/')),
    ("satool", os.path.join(BASE_DIR, 'satool/static/satool')),
    ("polls", os.path.join(BASE_DIR, 'polls/static/polls')),
    ("easyquery", os.path.join(BASE_DIR, 'easyquery/static/easyquery')),
    
)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ab*03u61%j@z-q8u%%$w+7+uu2$vjq#n4c+_n-4d384o2tty3n"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    "satool.apps.SatoolConfig",
    "easyquery.apps.EasyqueryConfig",
    "polls.apps.PollsConfig",
    "mysite.apps.MysiteConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mysite.urls"

TEMPLATE_DIR = os.path.join(BASE_DIR,"templates")

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATE_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]



WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#DATABASES = {
#    "default": {
#        "ENGINE": "django.db.backends.sqlite3",
#        "NAME": BASE_DIR / "db.sqlite3",
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django_db_python3',
        'USER': 'django',
        'PASSWORD': 'dj@ng0gr3s',
        'HOST': 'localhost',
        'PORT': '5432',
        },
    
     'xactly_dev': {
        #'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django_db_python3',
        'USER': 'django',
        'PASSWORD': 'dj@ng0gr3s',
        'HOST': 'localhost',
        'PORT': '5432',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

#STATIC_ROOT = '/var/www/django/static/'
#STATIC_URL = '/static/'

#set STATIC_ROOT and MEDIA_ROOT based on username_str

username_str = pwd.getpwuid(os.getuid())[0]
# username_str = 'jpartyka'
# username_str = 'rkumar'
# username_str = 'ndendukuri'

if username_str == "jpartyka":
    STATIC_ROOT = '/Users/jpartyka/Desktop/xactly_files/codebases/hackathon_2023/static/'
elif username_str == "rkumar":
    STATIC_ROOT = '/Users/rkumar/Documents/workspace/vistahackathon/hackathon_2023/static/'
else:
    STATIC_ROOT = '/Users/ndendukuri/hackthon/hackathon_2023/static/'  #nagaraju's path to 'static' directory

STATIC_URL = '/static/'

# Add customization for uploading files

if username_str == "jpartyka":
    MEDIA_ROOT = '/Users/jpartyka/Desktop/xactly_files/codebases/hackathon_2023/media/'
elif username_str == "rkumar":
    MEDIA_ROOT = '/Users/rkumar/Documents/workspace/vistahackathon/hackathon_2023/media/'
else:
    MEDIA_ROOT = '/Users/ndendukuri/hackthon/hackathon_2023/media/'  #nagaraju's path to 'media' directory

MEDIA_URL = 'media/'
DIRECTORY = 'uploads/'
EXTENSIONS = {
    'Document': ['.pdf','.doc','.rtf','.txt','.xls','.csv'],
    }


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
